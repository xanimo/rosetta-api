/* 
 * Rosetta
 *
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * OpenAPI spec version: 1.4.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ConstructionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ConstructionApiTests
    {
        private ConstructionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ConstructionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConstructionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ConstructionApi
            //Assert.IsInstanceOfType(typeof(ConstructionApi), instance, "instance is a ConstructionApi");
        }

        /// <summary>
        /// Test ConstructionCombine
        /// </summary>
        [Test]
        public void ConstructionCombineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionCombineRequest body = null;
            //var response = instance.ConstructionCombine(body);
            //Assert.IsInstanceOf<ConstructionCombineResponse> (response, "response is ConstructionCombineResponse");
        }
        /// <summary>
        /// Test ConstructionDerive
        /// </summary>
        [Test]
        public void ConstructionDeriveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionDeriveRequest body = null;
            //var response = instance.ConstructionDerive(body);
            //Assert.IsInstanceOf<ConstructionDeriveResponse> (response, "response is ConstructionDeriveResponse");
        }
        /// <summary>
        /// Test ConstructionHash
        /// </summary>
        [Test]
        public void ConstructionHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionHashRequest body = null;
            //var response = instance.ConstructionHash(body);
            //Assert.IsInstanceOf<TransactionIdentifierResponse> (response, "response is TransactionIdentifierResponse");
        }
        /// <summary>
        /// Test ConstructionMetadata
        /// </summary>
        [Test]
        public void ConstructionMetadataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionMetadataRequest body = null;
            //var response = instance.ConstructionMetadata(body);
            //Assert.IsInstanceOf<ConstructionMetadataResponse> (response, "response is ConstructionMetadataResponse");
        }
        /// <summary>
        /// Test ConstructionParse
        /// </summary>
        [Test]
        public void ConstructionParseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionParseRequest body = null;
            //var response = instance.ConstructionParse(body);
            //Assert.IsInstanceOf<ConstructionParseResponse> (response, "response is ConstructionParseResponse");
        }
        /// <summary>
        /// Test ConstructionPayloads
        /// </summary>
        [Test]
        public void ConstructionPayloadsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionPayloadsRequest body = null;
            //var response = instance.ConstructionPayloads(body);
            //Assert.IsInstanceOf<ConstructionPayloadsResponse> (response, "response is ConstructionPayloadsResponse");
        }
        /// <summary>
        /// Test ConstructionPreprocess
        /// </summary>
        [Test]
        public void ConstructionPreprocessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionPreprocessRequest body = null;
            //var response = instance.ConstructionPreprocess(body);
            //Assert.IsInstanceOf<ConstructionPreprocessResponse> (response, "response is ConstructionPreprocessResponse");
        }
        /// <summary>
        /// Test ConstructionSubmit
        /// </summary>
        [Test]
        public void ConstructionSubmitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConstructionSubmitRequest body = null;
            //var response = instance.ConstructionSubmit(body);
            //Assert.IsInstanceOf<TransactionIdentifierResponse> (response, "response is TransactionIdentifierResponse");
        }
    }

}
