/* 
 * Rosetta
 *
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * OpenAPI spec version: 1.4.10
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// CurveType is the type of cryptographic curve associated with a PublicKey. * secp256k1: SEC compressed - &#x60;33 bytes&#x60; (https://secg.org/sec1-v2.pdf#subsubsection.2.3.3) * secp256r1: SEC compressed - &#x60;33 bytes&#x60; (https://secg.org/sec1-v2.pdf#subsubsection.2.3.3) * edwards25519: &#x60;y (255-bits) || x-sign-bit (1-bit)&#x60; - &#x60;32 bytes&#x60; (https://ed25519.cr.yp.to/ed25519-20110926.pdf) * tweedle: 1st pk : Fq.t (32 bytes) || 2nd pk : Fq.t (32 bytes) (https://github.com/CodaProtocol/coda/blob/develop/rfcs/0038-rosetta-construction-api.md#marshal-keys)
    /// </summary>
    /// <value>CurveType is the type of cryptographic curve associated with a PublicKey. * secp256k1: SEC compressed - &#x60;33 bytes&#x60; (https://secg.org/sec1-v2.pdf#subsubsection.2.3.3) * secp256r1: SEC compressed - &#x60;33 bytes&#x60; (https://secg.org/sec1-v2.pdf#subsubsection.2.3.3) * edwards25519: &#x60;y (255-bits) || x-sign-bit (1-bit)&#x60; - &#x60;32 bytes&#x60; (https://ed25519.cr.yp.to/ed25519-20110926.pdf) * tweedle: 1st pk : Fq.t (32 bytes) || 2nd pk : Fq.t (32 bytes) (https://github.com/CodaProtocol/coda/blob/develop/rfcs/0038-rosetta-construction-api.md#marshal-keys)</value>
    [JsonConverter(typeof(StringEnumConverter))]
        public enum CurveType
    {
        /// <summary>
        /// Enum Secp256k1 for value: secp256k1
        /// </summary>
        [EnumMember(Value = "secp256k1")]
        Secp256k1 = 1,
        /// <summary>
        /// Enum Secp256r1 for value: secp256r1
        /// </summary>
        [EnumMember(Value = "secp256r1")]
        Secp256r1 = 2,
        /// <summary>
        /// Enum Edwards25519 for value: edwards25519
        /// </summary>
        [EnumMember(Value = "edwards25519")]
        Edwards25519 = 3,
        /// <summary>
        /// Enum Tweedle for value: tweedle
        /// </summary>
        [EnumMember(Value = "tweedle")]
        Tweedle = 4    }
}
