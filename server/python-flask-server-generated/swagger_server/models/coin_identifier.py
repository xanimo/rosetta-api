# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CoinIdentifier(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, identifier: str=None):  # noqa: E501
        """CoinIdentifier - a model defined in Swagger

        :param identifier: The identifier of this CoinIdentifier.  # noqa: E501
        :type identifier: str
        """
        self.swagger_types = {
            'identifier': str
        }

        self.attribute_map = {
            'identifier': 'identifier'
        }
        self._identifier = identifier

    @classmethod
    def from_dict(cls, dikt) -> 'CoinIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CoinIdentifier of this CoinIdentifier.  # noqa: E501
        :rtype: CoinIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identifier(self) -> str:
        """Gets the identifier of this CoinIdentifier.

        Identifier should be populated with a globally unique identifier of a Coin. In Bitcoin, this identifier would be transaction_hash:index.  # noqa: E501

        :return: The identifier of this CoinIdentifier.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier: str):
        """Sets the identifier of this CoinIdentifier.

        Identifier should be populated with a globally unique identifier of a Coin. In Bitcoin, this identifier would be transaction_hash:index.  # noqa: E501

        :param identifier: The identifier of this CoinIdentifier.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")  # noqa: E501

        self._identifier = identifier
