# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.account_identifier import AccountIdentifier  # noqa: F401,E501
from swagger_server.models.operation import Operation  # noqa: F401,E501
from swagger_server import util


class ConstructionParseResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, operations: List[Operation]=None, signers: List[str]=None, account_identifier_signers: List[AccountIdentifier]=None, metadata: object=None):  # noqa: E501
        """ConstructionParseResponse - a model defined in Swagger

        :param operations: The operations of this ConstructionParseResponse.  # noqa: E501
        :type operations: List[Operation]
        :param signers: The signers of this ConstructionParseResponse.  # noqa: E501
        :type signers: List[str]
        :param account_identifier_signers: The account_identifier_signers of this ConstructionParseResponse.  # noqa: E501
        :type account_identifier_signers: List[AccountIdentifier]
        :param metadata: The metadata of this ConstructionParseResponse.  # noqa: E501
        :type metadata: object
        """
        self.swagger_types = {
            'operations': List[Operation],
            'signers': List[str],
            'account_identifier_signers': List[AccountIdentifier],
            'metadata': object
        }

        self.attribute_map = {
            'operations': 'operations',
            'signers': 'signers',
            'account_identifier_signers': 'account_identifier_signers',
            'metadata': 'metadata'
        }
        self._operations = operations
        self._signers = signers
        self._account_identifier_signers = account_identifier_signers
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'ConstructionParseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConstructionParseResponse of this ConstructionParseResponse.  # noqa: E501
        :rtype: ConstructionParseResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operations(self) -> List[Operation]:
        """Gets the operations of this ConstructionParseResponse.


        :return: The operations of this ConstructionParseResponse.
        :rtype: List[Operation]
        """
        return self._operations

    @operations.setter
    def operations(self, operations: List[Operation]):
        """Sets the operations of this ConstructionParseResponse.


        :param operations: The operations of this ConstructionParseResponse.
        :type operations: List[Operation]
        """
        if operations is None:
            raise ValueError("Invalid value for `operations`, must not be `None`")  # noqa: E501

        self._operations = operations

    @property
    def signers(self) -> List[str]:
        """Gets the signers of this ConstructionParseResponse.

        [DEPRECATED by `account_identifier_signers` in `v1.4.4`] All signers (addresses) of a particular transaction. If the transaction is unsigned, it should be empty.  # noqa: E501

        :return: The signers of this ConstructionParseResponse.
        :rtype: List[str]
        """
        return self._signers

    @signers.setter
    def signers(self, signers: List[str]):
        """Sets the signers of this ConstructionParseResponse.

        [DEPRECATED by `account_identifier_signers` in `v1.4.4`] All signers (addresses) of a particular transaction. If the transaction is unsigned, it should be empty.  # noqa: E501

        :param signers: The signers of this ConstructionParseResponse.
        :type signers: List[str]
        """

        self._signers = signers

    @property
    def account_identifier_signers(self) -> List[AccountIdentifier]:
        """Gets the account_identifier_signers of this ConstructionParseResponse.


        :return: The account_identifier_signers of this ConstructionParseResponse.
        :rtype: List[AccountIdentifier]
        """
        return self._account_identifier_signers

    @account_identifier_signers.setter
    def account_identifier_signers(self, account_identifier_signers: List[AccountIdentifier]):
        """Sets the account_identifier_signers of this ConstructionParseResponse.


        :param account_identifier_signers: The account_identifier_signers of this ConstructionParseResponse.
        :type account_identifier_signers: List[AccountIdentifier]
        """

        self._account_identifier_signers = account_identifier_signers

    @property
    def metadata(self) -> object:
        """Gets the metadata of this ConstructionParseResponse.


        :return: The metadata of this ConstructionParseResponse.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: object):
        """Sets the metadata of this ConstructionParseResponse.


        :param metadata: The metadata of this ConstructionParseResponse.
        :type metadata: object
        """

        self._metadata = metadata
