# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BlockIdentifier(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, index: int=None, hash: str=None):  # noqa: E501
        """BlockIdentifier - a model defined in Swagger

        :param index: The index of this BlockIdentifier.  # noqa: E501
        :type index: int
        :param hash: The hash of this BlockIdentifier.  # noqa: E501
        :type hash: str
        """
        self.swagger_types = {
            'index': int,
            'hash': str
        }

        self.attribute_map = {
            'index': 'index',
            'hash': 'hash'
        }
        self._index = index
        self._hash = hash

    @classmethod
    def from_dict(cls, dikt) -> 'BlockIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BlockIdentifier of this BlockIdentifier.  # noqa: E501
        :rtype: BlockIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self) -> int:
        """Gets the index of this BlockIdentifier.

        This is also known as the block height.  # noqa: E501

        :return: The index of this BlockIdentifier.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index: int):
        """Sets the index of this BlockIdentifier.

        This is also known as the block height.  # noqa: E501

        :param index: The index of this BlockIdentifier.
        :type index: int
        """
        if index is None:
            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501

        self._index = index

    @property
    def hash(self) -> str:
        """Gets the hash of this BlockIdentifier.


        :return: The hash of this BlockIdentifier.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash: str):
        """Sets the hash of this BlockIdentifier.


        :param hash: The hash of this BlockIdentifier.
        :type hash: str
        """
        if hash is None:
            raise ValueError("Invalid value for `hash`, must not be `None`")  # noqa: E501

        self._hash = hash
