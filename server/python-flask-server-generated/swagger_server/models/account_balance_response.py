# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.amount import Amount  # noqa: F401,E501
from swagger_server.models.block_identifier import BlockIdentifier  # noqa: F401,E501
from swagger_server import util


class AccountBalanceResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, block_identifier: BlockIdentifier=None, balances: List[Amount]=None, metadata: object=None):  # noqa: E501
        """AccountBalanceResponse - a model defined in Swagger

        :param block_identifier: The block_identifier of this AccountBalanceResponse.  # noqa: E501
        :type block_identifier: BlockIdentifier
        :param balances: The balances of this AccountBalanceResponse.  # noqa: E501
        :type balances: List[Amount]
        :param metadata: The metadata of this AccountBalanceResponse.  # noqa: E501
        :type metadata: object
        """
        self.swagger_types = {
            'block_identifier': BlockIdentifier,
            'balances': List[Amount],
            'metadata': object
        }

        self.attribute_map = {
            'block_identifier': 'block_identifier',
            'balances': 'balances',
            'metadata': 'metadata'
        }
        self._block_identifier = block_identifier
        self._balances = balances
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'AccountBalanceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountBalanceResponse of this AccountBalanceResponse.  # noqa: E501
        :rtype: AccountBalanceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def block_identifier(self) -> BlockIdentifier:
        """Gets the block_identifier of this AccountBalanceResponse.


        :return: The block_identifier of this AccountBalanceResponse.
        :rtype: BlockIdentifier
        """
        return self._block_identifier

    @block_identifier.setter
    def block_identifier(self, block_identifier: BlockIdentifier):
        """Sets the block_identifier of this AccountBalanceResponse.


        :param block_identifier: The block_identifier of this AccountBalanceResponse.
        :type block_identifier: BlockIdentifier
        """
        if block_identifier is None:
            raise ValueError("Invalid value for `block_identifier`, must not be `None`")  # noqa: E501

        self._block_identifier = block_identifier

    @property
    def balances(self) -> List[Amount]:
        """Gets the balances of this AccountBalanceResponse.

        A single account may have a balance in multiple currencies.  # noqa: E501

        :return: The balances of this AccountBalanceResponse.
        :rtype: List[Amount]
        """
        return self._balances

    @balances.setter
    def balances(self, balances: List[Amount]):
        """Sets the balances of this AccountBalanceResponse.

        A single account may have a balance in multiple currencies.  # noqa: E501

        :param balances: The balances of this AccountBalanceResponse.
        :type balances: List[Amount]
        """
        if balances is None:
            raise ValueError("Invalid value for `balances`, must not be `None`")  # noqa: E501

        self._balances = balances

    @property
    def metadata(self) -> object:
        """Gets the metadata of this AccountBalanceResponse.

        Account-based blockchains that utilize a nonce or sequence number should include that number in the metadata. This number could be unique to the identifier or global across the account address.  # noqa: E501

        :return: The metadata of this AccountBalanceResponse.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: object):
        """Sets the metadata of this AccountBalanceResponse.

        Account-based blockchains that utilize a nonce or sequence number should include that number in the metadata. This number could be unique to the identifier or global across the account address.  # noqa: E501

        :param metadata: The metadata of this AccountBalanceResponse.
        :type metadata: object
        """

        self._metadata = metadata
