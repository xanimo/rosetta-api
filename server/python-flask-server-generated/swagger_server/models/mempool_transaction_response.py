# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.transaction import Transaction  # noqa: F401,E501
from swagger_server import util


class MempoolTransactionResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, transaction: Transaction=None, metadata: object=None):  # noqa: E501
        """MempoolTransactionResponse - a model defined in Swagger

        :param transaction: The transaction of this MempoolTransactionResponse.  # noqa: E501
        :type transaction: Transaction
        :param metadata: The metadata of this MempoolTransactionResponse.  # noqa: E501
        :type metadata: object
        """
        self.swagger_types = {
            'transaction': Transaction,
            'metadata': object
        }

        self.attribute_map = {
            'transaction': 'transaction',
            'metadata': 'metadata'
        }
        self._transaction = transaction
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt) -> 'MempoolTransactionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MempoolTransactionResponse of this MempoolTransactionResponse.  # noqa: E501
        :rtype: MempoolTransactionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transaction(self) -> Transaction:
        """Gets the transaction of this MempoolTransactionResponse.


        :return: The transaction of this MempoolTransactionResponse.
        :rtype: Transaction
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction: Transaction):
        """Sets the transaction of this MempoolTransactionResponse.


        :param transaction: The transaction of this MempoolTransactionResponse.
        :type transaction: Transaction
        """
        if transaction is None:
            raise ValueError("Invalid value for `transaction`, must not be `None`")  # noqa: E501

        self._transaction = transaction

    @property
    def metadata(self) -> object:
        """Gets the metadata of this MempoolTransactionResponse.


        :return: The metadata of this MempoolTransactionResponse.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: object):
        """Sets the metadata of this MempoolTransactionResponse.


        :param metadata: The metadata of this MempoolTransactionResponse.
        :type metadata: object
        """

        self._metadata = metadata
