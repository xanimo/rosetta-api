# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.network_identifier import NetworkIdentifier  # noqa: F401,E501
from swagger_server import util


class NetworkListResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, network_identifiers: List[NetworkIdentifier]=None):  # noqa: E501
        """NetworkListResponse - a model defined in Swagger

        :param network_identifiers: The network_identifiers of this NetworkListResponse.  # noqa: E501
        :type network_identifiers: List[NetworkIdentifier]
        """
        self.swagger_types = {
            'network_identifiers': List[NetworkIdentifier]
        }

        self.attribute_map = {
            'network_identifiers': 'network_identifiers'
        }
        self._network_identifiers = network_identifiers

    @classmethod
    def from_dict(cls, dikt) -> 'NetworkListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NetworkListResponse of this NetworkListResponse.  # noqa: E501
        :rtype: NetworkListResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_identifiers(self) -> List[NetworkIdentifier]:
        """Gets the network_identifiers of this NetworkListResponse.


        :return: The network_identifiers of this NetworkListResponse.
        :rtype: List[NetworkIdentifier]
        """
        return self._network_identifiers

    @network_identifiers.setter
    def network_identifiers(self, network_identifiers: List[NetworkIdentifier]):
        """Sets the network_identifiers of this NetworkListResponse.


        :param network_identifiers: The network_identifiers of this NetworkListResponse.
        :type network_identifiers: List[NetworkIdentifier]
        """
        if network_identifiers is None:
            raise ValueError("Invalid value for `network_identifiers`, must not be `None`")  # noqa: E501

        self._network_identifiers = network_identifiers
